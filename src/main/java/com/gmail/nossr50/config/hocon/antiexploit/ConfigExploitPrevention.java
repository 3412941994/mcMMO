package com.gmail.nossr50.config.hocon.antiexploit;

import ninja.leaping.configurate.objectmapping.Setting;
import ninja.leaping.configurate.objectmapping.serialize.ConfigSerializable;

@ConfigSerializable
public class ConfigExploitPrevention {

    /*
     * CONFIG NODES
     */

    @Setting(value = "General", comment = "Exploit settings that don't fit into specific categories")
    private ConfigSectionGeneral configSectionGeneral = new ConfigSectionGeneral();

    @Setting(value = "Skills", comment = "Exploit settings for specific skills")
    private ConfigSectionExploitSkills configSectionExploitSkills = new ConfigSectionExploitSkills();

    /*
     * BOILERPLATE GETTERS
     */

    public boolean getEndermenEndermiteFix() {
        return configSectionGeneral.getEndermenEndermiteFix();
    }

    public boolean doPistonsMarkBlocksUnnatural() {
        return configSectionGeneral.doPistonsMarkBlocksUnnatural();
    }

    public boolean doSpawnedEntitiesGiveModifiedXP() {
        return configSectionGeneral.doSpawnedEntitiesGiveModifiedXP();
    }

    public boolean doTamedEntitiesGiveXP() {
        return configSectionGeneral.doTamedEntitiesGiveXP();
    }

    public ConfigSectionGeneral getConfigSectionGeneral() {
        return configSectionGeneral;
    }

    public ConfigSectionExploitSkills getConfigSectionExploitSkills() {
        return configSectionExploitSkills;
    }

    public ConfigSectionExploitAcrobatics getConfigSectionExploitAcrobatics() {
        return configSectionExploitSkills.getConfigSectionExploitAcrobatics();
    }

    public ConfigSectionExploitFishing getConfigSectionExploitFishing() {
        return configSectionExploitSkills.getConfigSectionExploitFishing();
    }

    public long getFishingRodSpamMilliseconds() {
        return getConfigSectionExploitFishing().getFishingRodSpamMilliseconds();
    }

    public double getOverFishingAreaSize() {
        return getConfigSectionExploitFishing().getOverFishingAreaSize();
    }

    public boolean isPreventFishingExploits() {
        return getConfigSectionExploitFishing().isPreventFishingExploits();
    }

    public int getOverfishingLimit() {
        return getConfigSectionExploitFishing().getOverfishingLimit();
    }

    public boolean isAlertAdminsOnOverFishing() {
        return getConfigSectionExploitFishing().isAlertAdminsOnOverFishing();
    }

    public int getRollXPGainCooldownSeconds() {
        return getConfigSectionExploitAcrobatics().getRollXPGainCooldownSeconds();
    }

    public int getTeleportCooldownSeconds() {
        return getConfigSectionExploitAcrobatics().getTeleportCooldownSeconds();
    }

    public int getAcrobaticLocationLimit() {
        return getConfigSectionExploitAcrobatics().getAcrobaticLocationLimit();
    }

    public boolean isPreventAcrobaticsAbuse() {
        return getConfigSectionExploitAcrobatics().isPreventAcrobaticsAbuse();
    }

    public ConfigSectionExploitHerbalism getConfigSectionExploitHerbalism() {
        return configSectionExploitSkills.getConfigSectionExploitHerbalism();
    }

    public ConfigSectionExploitMining getConfigSectionExploitMining() {
        return configSectionExploitSkills.getConfigSectionExploitMining();
    }

    public boolean isPreventCobblestoneStoneGeneratorXP() {
        return configSectionExploitSkills.isPreventCobblestoneStoneGeneratorXP();
    }

    public boolean isPreventVehicleAutoFarming() {
        return configSectionExploitSkills.isPreventVehicleAutoFarming();
    }
}
